// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mentor_api.Data;

namespace mentor_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190626105411_User")]
    partial class User
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("mentor_api.Models.Price", b =>
                {
                    b.Property<int>("Id");

                    b.Property<double>("Price30Min");

                    b.Property<double>("Price45Min");

                    b.Property<double>("Price60Min");

                    b.HasKey("Id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("mentor_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("mentor_api.Models.Mentor", b =>
                {
                    b.HasBaseType("mentor_api.Models.User");

                    b.Property<string>("Description");

                    b.Property<string>("TeachingInformation");

                    b.HasDiscriminator().HasValue("Mentor");
                });

            modelBuilder.Entity("mentor_api.Models.Price", b =>
                {
                    b.HasOne("mentor_api.Models.Mentor", "Mentor")
                        .WithOne("Price")
                        .HasForeignKey("mentor_api.Models.Price", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
